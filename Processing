import processing.serial.*;

Serial serial;
float angleX, angleY, angleZ;

void setup() {
  size(400, 400, P3D);
  String portName = Serial.list()[0]; // 시리얼 포트 이름을 선택하여 설정 (필요한 경우 변경)
  int baudrate = 115200;
  serial = new Serial(this, portName, baudrate); // 시리얼 통신 시작
  angleX = 0;
  angleY = 0;
  angleZ = 0;
}

void draw() {
  if (serial.available() > 0) {
    String data = serial.readStringUntil('\n');
    if (data != null) {
      String[] values = data.trim().split(",");
      if (values.length == 3) {
        float accelerometerX = float(values[0].substring(values[0].indexOf(":") + 1));
        float accelerometerY = float(values[1].substring(values[1].indexOf(":") + 1));
        float accelerometerZ = float(values[2].substring(values[2].indexOf(":") + 1));

        // 가속도 값을 이용하여 3D 사각형 회전
      float rotationX = map(accelerometerX, -2, 2, -PI/4, PI/4); // X 축 회전 값 계산
      float rotationY = map(accelerometerY, -2, 2, -PI/4, PI/4); // Y 축 회전 값 계산
      float rotationZ = map(accelerometerZ, -2, 2, -PI/4, PI/4); // Z 축 회전 값 계산

        angleX = rotationX;
        angleY = rotationY;
        angleZ = rotationZ;
        
        println("Accelerometer X: " + accelerometerX);
        println("Accelerometer Y: " + accelerometerY);
        println("Accelerometer Z: " + accelerometerZ);

      }
    }
  }

  background(255);
  translate(width / 2, height / 2, 0);
  rotateX(angleX);
  rotateY(angleY);
  rotateZ(angleZ);
  box(100);
  
 textSize(20);
fill(255);
text("X: " + nf(angleX, 0, 2), -40, -40);
text("Y: " + nf(angleY, 0, 2), -40, -20);
text("Z: " + nf(angleZ, 0, 2), -40, 0);





}
